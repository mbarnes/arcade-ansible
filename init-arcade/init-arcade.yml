#!/usr/bin/ansible-playbook
---
#
# Configures hosts in an inventory group named "arcade_group" consisting
# of real Raspberry Pi devices with networking and SSH service available.
#
# Also installs software built with the qemu-build.yml playbook to these
# Raspberry Pi devices.
#
# To run:
# init-arcade.yml -e cli_chroot_path=/path/to/chroot
#

- hosts: localhost

  tasks:

  - name: Check for required variables
    fail:
      msg: "Variable {{ item }} is not defined"
    when: item is undefined
    with_items:
    - cli_chroot_path


- hosts: arcade_group
  remote_user: pi

  tasks:

  - name: System-level tasks
    become: yes
    block:

    - name: Set hostname to arcade
      hostname:
        name: "{{ inventory_hostname }}"

    - name: Update 127.0.1.1 hosts entry
      lineinfile:
        path: /etc/hosts
        regexp: '^127\.0\.1\.1'
        line: "127.0.1.1\t{{ inventory_hostname }}"

    - name: Configure HDMI parameters
      lineinfile:
        path: /boot/config.txt
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
      # hdmi_group: DMT / hdmi_mode: 1024x768 60 Hz
      - {regexp: '^#?hdmi_group=', line: "hdmi_group=2"}
      - {regexp: '^#?hdmi_mode=',  line: "hdmi_mode=16"}

    - name: Install required packages
      package:
        name:
        - tmux
        - vim
        - xinit
        # For MAME
        - libuv1
        # For Attract-Mode
        - libarchive13
        - libavformat57
        - libopenal1
        - libswscale4
        state: present

    - name: Allow anybody to run the X server
      lineinfile:
        path: /etc/X11/Xwrapper.config
        regexp: '^allowed_users='
        line: "allowed_users=anybody"

    - name: Configure systemd to launch the X server
      copy:
        src: xinit.conf
        dest: /etc/systemd/system/getty@tty1.service.d/

    - name: Synchronize locally built libraries
      synchronize:
        src: "{{ cli_chroot_path }}/usr/local/lib/"
        dest: /usr/local/lib

    - name: Run ldconfig on new libraries
      command: ldconfig /usr/local/lib

    - name: Synchronize default configuration files for Attract-Mode
      synchronize:
        src: attract
        dest: /usr/local/share

    # End of block

  - name: Create MAME directory structure
    file:
      path: "{{ ansible_user_dir }}/{{ item }}"
      state: directory
    with_items:
    - mame
    - mame/auxroms
    - mame/cfg
    - mame/flyers
    - mame/hi
    - mame/roms
    - mame/samples
    - mame/snaps
    - mame/videos

  - name: Synchronize home directory files
    synchronize:
      src: home/
      dest: "{{ ansible_user_dir }}"

  - name: Copy locally built binaries
    copy:
      src: "{{ cli_chroot_path }}/home/pi/git/{{ item }}"
      dest: "{{ ansible_user_dir }}/bin/"
      mode: preserve
    with_items:
    - attract/attract
    - mame/mamecocktail
